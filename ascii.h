#ifndef ASCII_H_
#define ASCII_H_

#include <string>

namespace fetchy {
class ASCII {
public:
    static std::string Get(std::string distro_name);
private:
    // ASCII FONT NAME: SLANT
    inline static std::string arch =
        "    ___              __   \n"
        "   /   |  __________/ /_  \n"
        "  / /| | / ___/ ___/ __ \\ \n"
        " / ___ |/ /  / /__/ / / / \n"
        "/_/  |_/_/   \\___/_/ /_/  \n";

    inline static std::string debian = 
        "    ____       __    _           \n"
        "   / __ \\___  / /_  (_)___ _____ \n"
        "  / / / / _ \\/ __ \\/ / __ `/ __ \\\n"
        " / /_/ /  __/ /_/ / / /_/ / / / /\n"
        "/_____/\\___/_.___/_/\\__,_/_/ /_/ \n";

    inline static std::string fedora = 
        "    ______         __                \n"
        "   / ____/__  ____/ /___  _________ _\n"
        "  / /_  / _ \\/ __  / __ \\/ ___/ __ `/\n"
        " / __/ /  __/ /_/ / /_/ / /  / /_/ / \n"
        "/_/    \\___/\\__,_/\\____/_/   \\__,_/  \n";

    inline static std::string linux_mint =
        "    __    _                     __  ____       __ \n"
        "   / /   (_)___  __  ___  __   /  |/  (_)___  / /_\n"
        "  / /   / / __ \\/ / / / |/_/  / /|_/ / / __ \\/ __/\n"
        " / /___/ / / / / /_/ />  <   / /  / / / / / / /_  \n"
        "/_____/_/_/ /_/\\__,_/_/|_|  /_/  /_/_/_/ /_/\\__/  \n";

    inline static std::string nixos =
        "    _   ___      ____  _____\n"
        "   / | / (_)  __/ __ \\/ ___/\n"
        "  /  |/ / / |/_/ / / /\\__ \\ \n"
        " / /|  / />  </ /_/ /___/ / \n"
        "/_/ |_/_/_/|_|\\____//____/  \n";

    inline static std::string opensuse =
        "                         _____ __  _______ ______\n"
        "  ____  ____  ___  ____ / ___// / / / ___// ____/\n"
        " / __ \\/ __ \\/ _ \\/ __ \\\\__ \\/ / / /\\__ \\/ __/   \n"
        "/ /_/ / /_/ /  __/ / / /__/ / /_/ /___/ / /___   \n"
        "\\____/ .___/\\___/_/ /_/____/\\____//____/_____/   \n"
        "    /_/                                          \n";
               
    inline static std::string pop_os =
        "    ____              __    ____  _____\n"
        "   / __ \\____  ____  / /   / __ \\/ ___/\n"
        "  / /_/ / __ \\/ __ \\/ /   / / / /\\__ \\ \n"
        " / ____/ /_/ / /_/ /_/   / /_/ /___/ / \n"
        "/_/    \\____/ .___(_)____\\____//____/  \n"
        "           /_/     /_____/             \n";

    inline static std::string ubuntu =
        "   __  ____                __       \n"
        "  / / / / /_  __  ______  / /___  __\n"
        " / / / / __ \\/ / / / __ \\/ __/ / / /\n"
        "/ /_/ / /_/ / /_/ / / / / /_/ /_/ / \n"
        "\\____/_.___/\\__,_/_/ /_/\\__/\\__,_/  \n";

    inline static std::string void_linux =
        " _    __      _     __\n"
        "| |  / /___  (_)___/ /\n"
        "| | / / __ \\/ / __  / \n"
        "| |/ / /_/ / / /_/ /  \n"
        "|___/\\____/_/\\__,_/   \n";
                       
    inline static std::string linux_catch_all =
        "    __    _                 \n"
        "   / /   (_)___  __  ___  __\n"
        "  / /   / / __ \\/ / / / |/_/\n"
        " / /___/ / / / / /_/ />  <  \n"
        "/_____/_/_/ /_/\\__,_/_/|_|  \n";                                               
};
} // namespace fetchy

#endif